let rec f = \ n. if n=8 then n else f (n-1) 
in 
f 10

;;

let rec fact = \ n. if n=0 then 1 else n*fact(n-1)
in
fact 4

;;

let rec fib = \ n. 
    if n=0 then 0 else 
        if n=1 then 1 else
            fib(n-2)+fib(n-1)
in
fib 10

;;

hd one:two

;;

hd (one:two:#):#

;;

(hd one:two:#):#

;;

let x = 2 in x + 2

;;

let rec f = \x.x in f 1

;;

(\ list . list) (tl 1 : 2 : 3 : #)

;;

(\list. hd list) 1:2:3:#


;;

let list = # in (if (hd list)=tl list then 1 else 0)

;;

(\list. if (hd list)=tl list then 1 else 0) #

;;

(\ x . 1 : x : #) 2


;;

(\ x . 1 less_equal x) 2

;;